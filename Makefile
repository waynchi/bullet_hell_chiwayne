#############################################################################
# Makefile for building: game_chiwayne
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon Apr 29 21:56:14 2013
# Project:  game_chiwayne.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_chiwayne.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Ally.cpp \
		Artillery.cpp \
		Background.cpp \
		Enemy.cpp \
		EnemyBullet.cpp \
		MainWindow.cpp \
		player.cpp \
		PlayerBullet.cpp \
		Powerup.cpp \
		Shell.cpp \
		shooter.cpp \
		Thing.cpp moc_MainWindow.cpp
OBJECTS       = Ally.o \
		Artillery.o \
		Background.o \
		Enemy.o \
		EnemyBullet.o \
		MainWindow.o \
		player.o \
		PlayerBullet.o \
		Powerup.o \
		Shell.o \
		shooter.o \
		Thing.o \
		moc_MainWindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_chiwayne.pro
QMAKE_TARGET  = game_chiwayne
DESTDIR       = 
TARGET        = game_chiwayne

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_chiwayne.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_chiwayne.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_chiwayne.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_chiwayne1.0.0 || $(MKDIR) .tmp/game_chiwayne1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_chiwayne1.0.0/ && $(COPY_FILE) --parents Ally.h Artillery.h Background.h Enemy.h EnemyBullet.h MainWindow.h player.h PlayerBullet.h Powerup.h Shell.h Thing.h .tmp/game_chiwayne1.0.0/ && $(COPY_FILE) --parents Ally.cpp Artillery.cpp Background.cpp Enemy.cpp EnemyBullet.cpp MainWindow.cpp player.cpp PlayerBullet.cpp Powerup.cpp Shell.cpp shooter.cpp Thing.cpp .tmp/game_chiwayne1.0.0/ && (cd `dirname .tmp/game_chiwayne1.0.0` && $(TAR) game_chiwayne1.0.0.tar game_chiwayne1.0.0 && $(COMPRESS) game_chiwayne1.0.0.tar) && $(MOVE) `dirname .tmp/game_chiwayne1.0.0`/game_chiwayne1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_chiwayne1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_MainWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MainWindow.cpp
moc_MainWindow.cpp: player.h \
		Thing.h \
		PlayerBullet.h \
		Enemy.h \
		EnemyBullet.h \
		Ally.h \
		Powerup.h \
		Artillery.h \
		Shell.h \
		Background.h \
		MainWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MainWindow.h -o moc_MainWindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

Ally.o: Ally.cpp Ally.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Ally.o Ally.cpp

Artillery.o: Artillery.cpp Artillery.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Artillery.o Artillery.cpp

Background.o: Background.cpp Background.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Background.o Background.cpp

Enemy.o: Enemy.cpp Enemy.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy.o Enemy.cpp

EnemyBullet.o: EnemyBullet.cpp EnemyBullet.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EnemyBullet.o EnemyBullet.cpp

MainWindow.o: MainWindow.cpp MainWindow.h \
		player.h \
		Thing.h \
		PlayerBullet.h \
		Enemy.h \
		EnemyBullet.h \
		Ally.h \
		Powerup.h \
		Artillery.h \
		Shell.h \
		Background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainWindow.o MainWindow.cpp

player.o: player.cpp player.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

PlayerBullet.o: PlayerBullet.cpp PlayerBullet.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PlayerBullet.o PlayerBullet.cpp

Powerup.o: Powerup.cpp Powerup.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Powerup.o Powerup.cpp

Shell.o: Shell.cpp Shell.h \
		Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Shell.o Shell.cpp

shooter.o: shooter.cpp MainWindow.h \
		player.h \
		Thing.h \
		PlayerBullet.h \
		Enemy.h \
		EnemyBullet.h \
		Ally.h \
		Powerup.h \
		Artillery.h \
		Shell.h \
		Background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shooter.o shooter.cpp

Thing.o: Thing.cpp Thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Thing.o Thing.cpp

moc_MainWindow.o: moc_MainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainWindow.o moc_MainWindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

